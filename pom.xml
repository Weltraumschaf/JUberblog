<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
        TIPS:

        - use "mvn versions:display-dependency-updates" to see what dependencies
          have updates available.

        - use "mvn versions:display-plugin-updates" to see whan plugins have
          updates available.
    -->
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.weltraumschaf.organization</groupId>
        <artifactId>organization-parent</artifactId>
        <version>2.1.0</version>
    </parent>

    <groupId>de.weltraumschaf</groupId>
    <artifactId>juberblog</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>JUberblog</name>
    <description>A Java blog based on Markdown.</description>
    <url>http://weltraumschaf.github.io/JUberblog/</url>

    <developers>
        <developer>
            <id>Weltraumschaf</id>
            <name>Sven Strittmatter</name>
            <email>ich@weltraumschaf.de</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>THE BEER-WARE LICENSE</name>
            <url>http://www.weltraumschaf.de/the-beer-ware-license.txt</url>
            <distribution>repo</distribution>
            <comments>
                LICENSE

                "THE BEER-WARE LICENSE" (Revision 42):
                "Sven Strittmatter" &lt;weltraumschaf(at)googlemail(dot)com&gt; wrote this file.
                As long as you retain this notice you can do whatever you want with
                this stuff. If we meet some day, and you think this stuff is worth it,
                you can buy me a beer in return.
            </comments>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/Weltraumschaf/JUberblog/issues</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git@github.com:Weltraumschaf/JUberblog.git</connection>
        <url>https://github.com/Weltraumschaf/JUberblog</url>
        <developerConnection>scm:git:git@github.com:Weltraumschaf/JUberblog.git</developerConnection>
    </scm>

    <distributionManagement>
        <site>
            <id>github-project-site</id>
            <url>gitsite:git@github.com/Weltraumschaf/JUberblog.git</url>
        </site>
    </distributionManagement>

    <ciManagement>
        <system>jenkins</system>
        <url>http://ci.weltraumschaf.de/job/JUberblog/</url>
    </ciManagement>

    <properties>
        <project.build.mainClass>de.weltraumschaf.juberblog.app.App</project.build.mainClass>
        <project.build.binDirectory>${project.basedir}/bin</project.build.binDirectory>
        <project.build.distDirectory>${project.basedir}/src/site/resources/dist</project.build.distDirectory>

        <maven.pmd.rulesetfiles>${project.basedir}/src/main/config/pmd.xml</maven.pmd.rulesetfiles>
        <maven.pmd.cpd-excludes>${project.basedir}/src/main/config/exclude-cpd.properties</maven.pmd.cpd-excludes>
        <maven.pmd.pmd-excludes>${project.basedir}/src/main/config/exclude-pmd.properties</maven.pmd.pmd-excludes>
        <maven.findbugs.excludefilterfile>${project.basedir}/src/main/config/findbugs-exclude.xml</maven.findbugs.excludefilterfile>
        <maven.findbugs.includefilterfile>${project.basedir}/src/main/config/findbugs-include.xml</maven.findbugs.includefilterfile>

        <dependency.commons.version>2.2.0</dependency.commons.version>
        <dependency.freemarkerdown.version>1.0.0</dependency.freemarkerdown.version>
        <dependency.joda-time.version>2.9.3</dependency.joda-time.version>
        <dependency.javax.ws.rs-api.version>2.0</dependency.javax.ws.rs-api.version>
        <dependency.jersey-common.version>2.4.1</dependency.jersey-common.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>application</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>guava</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>jcommander</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>system</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>string</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>testing</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>uri</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>validate</artifactId>
            <version>${dependency.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf</groupId>
            <artifactId>freemarkerdown</artifactId>
            <version>${dependency.freemarkerdown.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${dependency.joda-time.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-core</artifactId>
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-matchers</artifactId>
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Default</threshold>
                        <xmlOutput>true</xmlOutput>
                        <findbugsXmlOutput>true</findbugsXmlOutput>
                        <excludeFilterFile>${maven.findbugs.excludefilterfile}</excludeFilterFile>
                        <includeFilterFile>${maven.findbugs.includefilterfile}</includeFilterFile>
                        <!-- Optional directory to put findbugs xdoc xml report -->
                        <xmlOutputDirectory>target/site</xmlOutputDirectory>
                        <xmlOutput>true</xmlOutput>
                        <threshold>Low</threshold>
                        <effort>Max</effort>
                        <debug>false</debug>
                        <relaxed>false</relaxed>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!--
                Build plugins.
            -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>

                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.build.binDirectory}</directory>
                            <includes>
                                <include>*.jar</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${project.build.mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRefs>jar-with-dependencies</descriptorRefs>
                    </descriptorRefs>
                    <finalName>${finalName}</finalName>
                    <outputDirectory>${project.build.binDirectory}</outputDirectory>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                </configuration>
            </plugin>

            <!--
                Code analysis plugins.
            -->
            <plugin>
                <!-- http://wiki.netbeans.org/MavenCodeCoverage -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>

                <configuration>
                    <excludes>
                        <exclude>**/ExitCodeImpl.class</exclude>
                        <exclude>**/de/weltraumschaf/juberblog/uri/*.class</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>

                <configuration>
                    <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <linkXRef>false</linkXRef>
                    <configLocation>${project.basedir}/src/main/config/checkstyle-ruleset.xml</configLocation>
                    <suppressionsLocation>${project.basedir}/src/main/config/checkstyle-suppressions.xml</suppressionsLocation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>

            <!--
                Site generation
            -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>

                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>

                        <phase>pre-site</phase>

                        <configuration>
                            <target>
                                <copydir src="${project.build.binDirectory}"
                                         dest="${project.build.directory}/juberblog" />
                                <tar destfile="${project.build.distDirectory}/${project.build.finalName}-${project.version}.tar.bz2"
                                     basedir="${project.build.directory}/juberblog"
                                     compression="bzip2" />
                                <tar destfile="${project.build.distDirectory}/${project.build.finalName}-${project.version}.tar.gz"
                                     basedir="${project.build.directory}/juberblog"
                                     compression="gzip" />
                                <zip destfile="${project.build.distDirectory}/${project.build.finalName}-${project.version}.zip"
                                     basedir="${project.build.directory}/juberblog" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
